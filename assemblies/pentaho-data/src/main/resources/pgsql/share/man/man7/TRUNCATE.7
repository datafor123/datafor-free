'\" t
.\"     Title: TRUNCATE
.\"    Author: The PostgreSQL Global Development Group
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 2022
.\"    Manual: PostgreSQL 10.20 Documentation
.\"    Source: PostgreSQL 10.20
.\"  Language: English
.\"
.TH "TRUNCATE" "7" "2022" "PostgreSQL 10.20" "PostgreSQL 10.20 Documentation"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
TRUNCATE \- empty a table or set of tables
.SH "SYNOPSIS"
.sp
.nf
TRUNCATE [ TABLE ] [ ONLY ] \fIname\fR [ * ] [, \&.\&.\&. ]
    [ RESTART IDENTITY | CONTINUE IDENTITY ] [ CASCADE | RESTRICT ]
.fi
.SH "DESCRIPTION"
.PP
\fBTRUNCATE\fR
quickly removes all rows from a set of tables\&. It has the same effect as an unqualified
\fBDELETE\fR
on each table, but since it does not actually scan the tables it is faster\&. Furthermore, it reclaims disk space immediately, rather than requiring a subsequent
\fBVACUUM\fR
operation\&. This is most useful on large tables\&.
.SH "PARAMETERS"
.PP
\fIname\fR
.RS 4
The name (optionally schema\-qualified) of a table to truncate\&. If
ONLY
is specified before the table name, only that table is truncated\&. If
ONLY
is not specified, the table and all its descendant tables (if any) are truncated\&. Optionally,
*
can be specified after the table name to explicitly indicate that descendant tables are included\&.
.RE
.PP
RESTART IDENTITY
.RS 4
Automatically restart sequences owned by columns of the truncated table(s)\&.
.RE
.PP
CONTINUE IDENTITY
.RS 4
Do not change the values of sequences\&. This is the default\&.
.RE
.PP
CASCADE
.RS 4
Automatically truncate all tables that have foreign\-key references to any of the named tables, or to any tables added to the group due to
CASCADE\&.
.RE
.PP
RESTRICT
.RS 4
Refuse to truncate if any of the tables have foreign\-key references from tables that are not listed in the command\&. This is the default\&.
.RE
.SH "NOTES"
.PP
You must have the
TRUNCATE
privilege on a table to truncate it\&.
.PP
\fBTRUNCATE\fR
acquires an
ACCESS EXCLUSIVE
lock on each table it operates on, which blocks all other concurrent operations on the table\&. When
RESTART IDENTITY
is specified, any sequences that are to be restarted are likewise locked exclusively\&. If concurrent access to a table is required, then the
\fBDELETE\fR
command should be used instead\&.
.PP
\fBTRUNCATE\fR
cannot be used on a table that has foreign\-key references from other tables, unless all such tables are also truncated in the same command\&. Checking validity in such cases would require table scans, and the whole point is not to do one\&. The
CASCADE
option can be used to automatically include all dependent tables \(em but be very careful when using this option, or else you might lose data you did not intend to!
.PP
\fBTRUNCATE\fR
will not fire any
ON DELETE
triggers that might exist for the tables\&. But it will fire
ON TRUNCATE
triggers\&. If
ON TRUNCATE
triggers are defined for any of the tables, then all
BEFORE TRUNCATE
triggers are fired before any truncation happens, and all
AFTER TRUNCATE
triggers are fired after the last truncation is performed and any sequences are reset\&. The triggers will fire in the order that the tables are to be processed (first those listed in the command, and then any that were added due to cascading)\&.
.PP
\fBTRUNCATE\fR
is not MVCC\-safe\&. After truncation, the table will appear empty to concurrent transactions, if they are using a snapshot taken before the truncation occurred\&. See
Section\ \&13.5
for more details\&.
.PP
\fBTRUNCATE\fR
is transaction\-safe with respect to the data in the tables: the truncation will be safely rolled back if the surrounding transaction does not commit\&.
.PP
When
RESTART IDENTITY
is specified, the implied
\fBALTER SEQUENCE RESTART\fR
operations are also done transactionally; that is, they will be rolled back if the surrounding transaction does not commit\&. Be aware that if any additional sequence operations are done on the restarted sequences before the transaction rolls back, the effects of these operations on the sequences will be rolled back, but not their effects on
\fBcurrval()\fR; that is, after the transaction
\fBcurrval()\fR
will continue to reflect the last sequence value obtained inside the failed transaction, even though the sequence itself may no longer be consistent with that\&. This is similar to the usual behavior of
\fBcurrval()\fR
after a failed transaction\&.
.PP
\fBTRUNCATE\fR
is not currently supported for foreign tables\&. This implies that if a specified table has any descendant tables that are foreign, the command will fail\&.
.SH "EXAMPLES"
.PP
Truncate the tables
bigtable
and
fattable:
.sp
.if n \{\
.RS 4
.\}
.nf
TRUNCATE bigtable, fattable;
.fi
.if n \{\
.RE
.\}
.PP
The same, and also reset any associated sequence generators:
.sp
.if n \{\
.RS 4
.\}
.nf
TRUNCATE bigtable, fattable RESTART IDENTITY;
.fi
.if n \{\
.RE
.\}
.PP
Truncate the table
othertable, and cascade to any tables that reference
othertable
via foreign\-key constraints:
.sp
.if n \{\
.RS 4
.\}
.nf
TRUNCATE othertable CASCADE;
.fi
.if n \{\
.RE
.\}
.SH "COMPATIBILITY"
.PP
The SQL:2008 standard includes a
\fBTRUNCATE\fR
command with the syntax
TRUNCATE TABLE \fItablename\fR\&. The clauses
CONTINUE IDENTITY/RESTART IDENTITY
also appear in that standard, but have slightly different though related meanings\&. Some of the concurrency behavior of this command is left implementation\-defined by the standard, so the above notes should be considered and compared with other implementations if necessary\&.
.SH "SEE ALSO"
\fBDELETE\fR(7)
