<?xml version="1.0" encoding="UTF-8"?>
<!--+
  | Application context containing CORS related beans.
  +-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
       xmlns:swm="http://www.hitachivantara.com/schema/security/web/model/spring"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
          http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd
          http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd
          http://www.hitachivantara.com/schema/security/web/model/spring http://www.hitachivantara.com/schema/security/web/model/spring/hv-swm-spring.xsd"
       default-lazy-init="true">

  <!-- region CORS Configurations -->

  <!-- Root/Default CORS configuration -->
  <bean class="com.hitachivantara.security.web.impl.model.cors.CorsRequestSetConfigurationPojo">
    <pen:publish as-type="INTERFACES" />

    <!-- There can be only one root CORS configuration -->
    <property name="name" value="root" />

    <property name="requestMatcher">
      <swm:all-request-matcher />
    </property>

    <!-- Old configuration properties are expected to be in `pentaho.xml` -->
    <property name="enabled" value="${system.cors-requests-allowed:false}" />
    <property name="allowedOrigins" value="${system.cors-requests-allowed-domains:}" />

    <!-- New configurations properties are expected to be in `system.properties` -->
    <property name="abstract" value="${system.cors-root-config-is-abstract:true}" />
    <property name="allowedMethods" value="${system.cors-requests-allowed-methods:GET,HEAD,POST}" />
    <property name="allowCredentials" value="${system.cors-requests-allow-credentials:true}" />
    <property name="allowedHeaders" value="${system.cors-requests-allowed-headers:}" />
    <property name="exposedHeaders" value="${system.cors-requests-exposed-headers:}" />
  </bean>

  <!-- Aggregates all registered CORS request set configurations, from the system and plugins -->
  <bean id="aggregatedCorsConfiguration"
        class="com.hitachivantara.security.web.impl.model.cors.AggregatedRequestSetCorsConfiguration">

    <!-- Can be used by others to know if CORS is enabled. -->
    <pen:publish as-type="INTERFACES" />

    <property name="requestSetConfigurations">
      <pen:list class="com.hitachivantara.security.web.model.cors.CorsRequestSetConfiguration" />
    </property>
  </bean>

  <!-- endregion configurations -->

  <!-- CORS filter that handles pre-flight and normal CORS requests.
       See use in `filterChainProxy` in `applicationContext-spring-security.xml`.
       -->
  <bean id="corsFilter" class="com.hitachivantara.security.web.impl.service.cors.servlet.CorsProtocolFilter">
    <constructor-arg ref="aggregatedCorsConfiguration" />
  </bean>
</beans>
